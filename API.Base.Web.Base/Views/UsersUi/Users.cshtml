@using API.Base.Web.Base.Auth.Models.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@model IEnumerable<API.Base.Web.Base.Auth.Models.Entities.User>
@inject UserManager<User> UserManager
@inject RoleManager<Role> RoleManager
@{
    var availableRoles = await RoleManager.Roles.ToListAsync();
    ViewData["Title"] = "Admin Users";
}

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            First Name
        </th>
        <th>
            Last Name
        </th>
        <th>
            Created
        </th>
        <th>
            Email Confirmed
        </th>
        <th>
            Roles
        </th>
        <th>
            Deleted
        </th>
        <th>
            Food code
        </th>
        <th>
            Actions
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        var roles = await UserManager.GetRolesAsync(item);
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailConfirmed)
            </td>
            <td>
                @string.Join(" ", roles)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Deleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                <div>
                    <a class="btn btn-outline-primary mb-1"
                       data-toggle="collapse"
                       href="#collapseRoles-@item.Id"
                       role="button" aria-expanded="false"
                       aria-controls="collapseRoles-@item.Id">
                        <i class="fa fa-tags" aria-hidden="true"></i>
                    </a>
                    <a class="btn btn-outline-primary"
                       asp-action="Update"
                       asp-route-id="@item.Id">
                        <i class="fa fa-pencil" aria-hidden="true"></i>
                    </a>
                    @if (!item.Deleted)
                    {
                        <a class="btn btn-outline-primary"
                           asp-action="Delete"
                           asp-route-id="@item.Id">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </a>
                    }
                </div>
                <div id="collapseRoles-@item.Id" class="collapse card card-body bg-light">

                    @foreach (var availableRole in availableRoles)
                    {
                        if (!roles.Contains(availableRole.Name))
                        {
                            <a asp-action="ConfirmChangeRole"
                               asp-route-id="@item.Id"
                               asp-route-role="@availableRole.Name"
                               asp-route-add="true"
                               class="btn btn-danger btn-sm mb-1">
                                Add <b>@availableRole.Name</b> Role
                            </a>
                        }
                        else
                        {
                            <a asp-action="ConfirmChangeRole"
                               asp-route-id="@item.Id"
                               asp-route-role="@availableRole.Name"
                               asp-route-add="false"
                               class="btn btn-danger btn-sm mb-1">
                                Remove <b>@availableRole.Name</b> Role
                            </a>
                        }
                    }
                </div>

            </td>
        </tr>
    }
    </tbody>
</table>