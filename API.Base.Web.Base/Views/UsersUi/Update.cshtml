@model API.Base.Web.Base.Auth.Models.Entities.User

@{
    ViewBag.Title = "Update " + Model.Email;
    Layout = "_Layout";
}


<div class="row">
    <div class="col-12 col-sm-8 col-md-6 col-lg-4">
        <form asp-action="Update" asp-route-returnUrl="@Context.Request.Query["returnUrl"]">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName)
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName)
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EmailConfirmed)
                @Html.EditorFor(model => model.EmailConfirmed, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new {@class = "text-danger"})
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary"/>
                @if (Context.Request.Query.ContainsKey("returnUrl"))
                {
                    <a href="@Context.Request.Query["returnUrl"]" class="btn btn-outline-primary">Back</a>
                }
            </div>
        </form>
    </div>
</div>