@using API.Base.Web.Base.Extensions.HtmlHelpers
@using API.Base.Web.Common.OgMetadata
@model API.Base.Web.Common.OgMetadata.OgMetadataEntity

<div>
        <div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })

@Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })

@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })

@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })

<select asp-for="Type" asp-items="Html.GetEnumSelectList<OgMetadataType>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
            </select>
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })

@{
var fieldGuidImage = Html.RandomId();
}
<input asp-for="Image.Id" class="form-control setting_value_input" id="file-field-@(fieldGuidImage)" readonly/>
@{
await Html.RenderBlindPartialAsync("~/Views/FileUi/_FileField.cshtml", Model?.Image, 
 new ViewDataDictionary(ViewData) {{"input", "#file-field-" + fieldGuidImage}});
}

            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
</div>