
@using API.Base.Web.Base.Extensions.HtmlHelpers
@model API.Base.Web.Common.FAQ.FaqEntity

<div>
        <div class="form-group">
            @Html.LabelFor(model => model.Question)

@Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Answer)

@{
var fieldGuidAnswer = Html.RandomId();
}
@Html.TextAreaFor(model => model.Answer, new { id = fieldGuidAnswer, @class = "form-control" })
<script>
function initCkEditorFieldAnswer() { CKEDITOR.replace("@fieldGuidAnswer");}
window.addEventListener('load',function() {initCkEditorFieldAnswer();});
</script>

            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Category)

@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Published)

@Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
        </div>
</div>