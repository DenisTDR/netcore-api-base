@using API.Base.Web.Base.Models.Entities
@model API.Base.Web.RazorGenerator.Models.Index.IndexTemplateModel
@{
    var showActionsColumn = Model.Actions != null && Model.Actions.Count > 0;
}
@@using API.Base.Web.Base.Extensions.HtmlHelpers
@@model IEnumerable<@Model.FullTypeName>

@@{
ViewData["Title"] = "@Model.PageTitle";
}

<h2>@@ViewData["Title"]</h2>
<div class="row">
    <div class="col-12 col-md-6">
        @if (Model.TopLinks.Any())
        {
            foreach (var topLink in Model.TopLinks)
            {
                @Html.Raw("<a asp-action=\"" + topLink.Action + "\" asp-controller=\"" + topLink.Controller + "\" class=\"mr-3\">" + topLink.Text + "</a>")
            }
        }
    </div>
    <div class="col-12 col-md-6 d-flex justify-content-end pb-2">
        @if (Model.IsOrdered)
        {
            @Html.Raw("<a class=\"btn btn-outline-primary mr-2\" asp-action=\"ReOrder\">ReOrder</a>")
        }
        @Html.Raw("<a class=\"btn btn-outline-primary\" asp-action=\"Create\">Create new " + Model.EntityName + "</a>")
    </div>
</div>

<table class="table">
    <thead>
    <tr>
        @foreach (var column in Model.Columns)
        {
            <th>
                @@Html.DisplayNameFor(model => model.@column.Name)
            </th>
        }
        @if (showActionsColumn)
        {
            <th>Actions</th>
        }
    </tr>
    </thead>
    <tbody>
    @@foreach (var item in Model)
    {
    <tr>
        @foreach (var column in Model.Columns)
        {
            <td>
                @if (column.PropertyType == typeof(API.Base.Files.Models.Entities.FileEntity))
                {
                    @Html.Raw("@{")
                    @Html.Raw("await Html.RenderBlindPartialAsync(\"_FileLinkPreview\", item." + column.Name + ", ViewData);")
                    @Html.Raw("}")
                }
                else if (column.PropertyType.IsSubclassOf(typeof(Entity)))
                {
                    <span>
                        @Html.Raw("@item." + column.Name + "")
                    </span>
                }
                else
                {
                    <span>@@Html.DisplayFor(modelItem => item.@column.Name)</span>
                }
            </td>
        }
        @if (showActionsColumn)
        {
            <td>
                @foreach (var action in Model.Actions)
                {
                    @Html.Raw("<a asp-action=\"" + action + "\" asp-route-id=\"@item.Id\">" + action + "</a>")
                    <span></span>
                }
            </td>
        }
    </tr>
    }
    </tbody>
</table>